#pragma version 5
txn ApplicationID
int 0
==
bnz main_l16
txn OnCompletion
int OptIn
==
bnz main_l15
txn OnCompletion
int CloseOut
==
bnz main_l14
txn OnCompletion
int DeleteApplication
==
bnz main_l13
txn OnCompletion
int UpdateApplication
==
bnz main_l12
txn OnCompletion
int NoOp
==
bnz main_l7
err
main_l7:
txna ApplicationArgs 0
byte "request"
==
bnz main_l11
txna ApplicationArgs 0
byte "respond"
==
bnz main_l10
err
main_l10:
txna ApplicationArgs 1
btoi
store 0
txna ApplicationArgs 1
txna ApplicationArgs 2
txna ApplicationArgs 3
txna ApplicationArgs 4
byte ""
app_global_get
extract 8 32
callsub validatevrf_5
load 0
txna ApplicationArgs 3
callsub storevrf_6
txna ApplicationArgs 1
callsub updatelastround_4
int 1
return
main_l11:
txna ApplicationArgs 1
btoi
store 0
byte ""
app_global_get
int 0
extract_uint64
load 0
>=
assert
load 0
int 189
int 8
*
+
byte ""
app_global_get
int 0
extract_uint64
>
assert
load 0
callsub getslotfromround_1
app_global_get
int 32
load 0
callsub getseedindexfromround_2
*
int 32
extract3
log
int 1
return
main_l12:
txn Sender
global CreatorAddress
==
return
main_l13:
txn Sender
global CreatorAddress
==
return
main_l14:
int 1
return
main_l15:
int 1
return
main_l16:
txna ApplicationArgs 0
len
int 8
==
assert
txna ApplicationArgs 1
len
int 32
==
assert
txna ApplicationArgs 2
len
int 32
==
assert
txna ApplicationArgs 0
txna ApplicationArgs 3
txna ApplicationArgs 4
txna ApplicationArgs 5
txna ApplicationArgs 1
callsub validatevrf_5
int 0
int 63
byte "aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"
callsub initglobalstate_7
txna ApplicationArgs 0
btoi
txna ApplicationArgs 4
callsub storevrf_6
byte ""
txna ApplicationArgs 0
txna ApplicationArgs 1
concat
txna ApplicationArgs 2
concat
app_global_put
int 1
return

// ceiling8
ceiling8_0:
store 2
load 2
int 7
+
int 8
/
retsub

// get_slot_from_round
getslotfromround_1:
store 1
load 1
callsub ceiling8_0
int 189
%
int 3
/
itob
retsub

// get_seed_index_from_round
getseedindexfromround_2:
store 3
load 3
callsub ceiling8_0
int 189
%
int 3
%
retsub

// generate_slot_with_new_seed
generateslotwithnewseed_3:
store 15
store 14
store 13
load 15
int 0
==
bnz generateslotwithnewseed_3_l6
load 15
int 1
==
bnz generateslotwithnewseed_3_l5
load 15
int 2
==
bnz generateslotwithnewseed_3_l4
err
generateslotwithnewseed_3_l4:
load 13
extract 0 64
load 14
concat
b generateslotwithnewseed_3_l7
generateslotwithnewseed_3_l5:
load 13
extract 0 32
load 14
concat
load 13
extract 64 32
concat
b generateslotwithnewseed_3_l7
generateslotwithnewseed_3_l6:
load 14
load 13
extract 32 64
concat
generateslotwithnewseed_3_l7:
retsub

// update_last_round
updatelastround_4:
store 4
byte ""
load 4
byte ""
app_global_get
extract 8 64
concat
app_global_put
retsub

// validate_vrf
validatevrf_5:
store 9
store 8
store 7
store 6
store 5
load 5
load 6
concat
load 7
concat
load 8
load 9
ed25519verify
assert
retsub

// store_vrf
storevrf_6:
store 11
store 10
load 10
callsub getslotfromround_1
store 12
load 12
load 12
app_global_get
load 11
sha512_256
load 10
callsub getseedindexfromround_2
callsub generateslotwithnewseed_3
app_global_put
retsub

// init_global_state
initglobalstate_7:
store 18
store 17
store 16
load 16
store 19
initglobalstate_7_l1:
load 19
load 17
<
bz initglobalstate_7_l3
load 19
itob
load 18
app_global_put
load 19
int 1
+
store 19
b initglobalstate_7_l1
initglobalstate_7_l3:
retsub